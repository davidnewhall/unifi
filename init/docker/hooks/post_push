#!/bin/bash

# This will fail until the final image is built and runs it.
set -e -o pipefail

REPO=golift/unifi-poller

docker manifest create --amend ${REPO}:latest ${REPO}:latest_linux_amd64 ${REPO}:latest_linux_arm
docker manifest annotate ${REPO}:latest ${REPO}:latest_linux_arm --os linux --arch arm
docker manifest push ${REPO}:latest

VERSION=$(git tag -l --merged | tail -n1 | tr -d v)
if [ "$VERSION" = "$SOURCE_BRANCH"]; then
  # If we get into here, it means the docker build is for a tagged release on github.
  docker manifest create ${REPO}:stable ${REPO}:${VERSION}_linux_amd64 ${REPO}:${VERSION}_linux_arm
  docker manifest annotate ${REPO}:stable ${REPO}:${VERSION}_linux_arm --os linux --arch arm
  docker manifest push ${REPO}:stable
  # version tag. 1.2.3
  docker manifest create ${REPO}:${VERSION} ${REPO}:${VERSION}_linux_amd64 ${REPO}:${VERSION}_linux_arm
  docker manifest annotate ${REPO}:${VERSION} ${REPO}:${VERSION}_linux_arm --os linux --arch arm
  docker manifest push ${REPO}:${VERSION}
  # short version tag. 1.2
  VER=$(echo $VERSION | cut -d. -f1,2)
  docker manifest create ${REPO}:${VER} ${REPO}:${VERSION}_linux_amd64 ${REPO}:${VERSION}_linux_arm
  docker manifest annotate ${REPO}:${VER} ${REPO}:${VERSION}_linux_arm --os linux --arch arm
  docker manifest push ${REPO}:${VER}
fi
